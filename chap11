What was the important theme for this chapter?

The important theme of this chapter is that one should plan to throw way something when working on a project. No matter how long a project has been under construction, and the project progresses, one learns from the projects and makes changes. 

How does this chapter tie in what what you know about development in this stage in your career?

Working on something is just experimenting, so no matter how long or how many resources it took to accomplish a stage within the project, there will always be something wrong. I've thrown a lot of work away and not use in the final version. It's so frustrating to have so long on something and then to realize that it needs to be thrown away, because it just won't work. 

What was the most important lesson you learned in this chapter?

I just need to "let it go, let it go...." 
At the same time that I'm working on a project, I am also learning, so there will endless amounts of bugs and endless amount of hours trying to fix them. I'll then just probably decide to toss something out because I learned a better way to do it. 

Do you feel that this chapter is still applicable to development today? Why or Why not?

Of course! This chapter touches on the progression of a project and the different stages it takes to get there, along the way, people are constantly learning to improve the functionality of the project. 

Where there any revelations you had from reading this chapter?

Yes, when I start working at Microsoft as an Engineer, I'll be working with multiple people. I'll have to learn to read their style of code and understand why they constructed it that way. I'll also have to debug their code so that it doesn't affect with my portion of the code. This chapter was just a bit of reality...working with people, debugging, more debugging, test, debugging, more debugging...and throwing away...

How awesome is this book?!!?
Thanks for the recommendation! :D 
